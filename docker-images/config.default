#!/bin/sh

set -e
cd $(dirname $0)

FLUENTD_CONFIG=/etc/fluentd/fluentd.conf

assert_not_empty(){
    arg=$1
    shift
    if [ -z "$arg" ]; then
        echo "$@"
        exit 1
    fi
}

mkdir -p /etc/fluentd
echo "@include conf.d/*.conf" >> $FLUENTD_CONFIG

es(){
assert_not_empty "$ELASTICSEARCH_HOST" "ELASTICSEARCH_HOST required"
assert_not_empty "$ELASTICSEARCH_PORT" "ELASTICSEARCH_PORT required"

cat >> $FLUENTD_CONFIG << EOF
<match **>
@type elasticsearch
hosts $ELASTICSEARCH_HOST:$ELASTICSEARCH_PORT
reconnect_on_error true
${ELASTICSEARCH_USER:+user ${ELASTICSEARCH_USER}}
${ELASTICSEARCH_PASSWORD:+password ${ELASTICSEARCH_PASSWORD}}
${ELASTICSEARCH_PATH:+path ${ELASTICSEARCH_PATH}}
${ELASTICSEARCH_SCHEME:+scheme ${ELASTICSEARCH_SCHEME}}
${ELASTICSEARCH_SSL_VERIFY:+ssl_verify ${ELASTICSEARCH_SSL_VERIFY}}
target_index_key target
index_name _default_index
flush_interval 3
type_name fluentd
</match>
EOF
}

default(){
echo "use default output"
cat >> $FLUENTD_CONFIG << EOF
<match **>
@type stdout
</match>
EOF
}

graylog(){
assert_not_empty "$GRAYLOG_HOST" "GRAYLOG_HOST required"
assert_not_empty "$GRAYLOG_PORT" "GRAYLOG_PORT required"
cat > $FLUENTD_CONFIG << EOF
<match **>
type gelf
host $GRAYLOG_HOST
port $GRAYLOG_PORT
flush_interval 3s
</match>
EOF
}

case "$FLUENTD_OUTPUT" in
    elasticsearch)
        es;;
    graylog)
        graylog;;
    *)
        default
esac

